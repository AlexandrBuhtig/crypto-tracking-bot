import requests
from telegram import Bot
import time
import os

# –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é)
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = Bot(token=TELEGRAM_BOT_TOKEN)

# –°–ø–∏—Å–æ–∫ –º–æ–Ω–µ—Ç –∏ –∏—Ö —Ü–µ–ª–µ–≤—ã—Ö —Ü–µ–Ω
coins = {
    "FET": {"target_buy": 1.00, "stop_loss": 0.70},
    "LINK": {"target_buy": 20.00, "stop_loss": 15.00},
    "SCRT": {"target_buy": 0.30, "stop_loss": 0.21},
    "AVAX": {"target_buy": 30.00, "stop_loss": 22.00}
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã –º–æ–Ω–µ—Ç—ã
def get_coin_price(coin):
    coin_ids = {
        "FET": "fetch-ai",
        "LINK": "chainlink",
        "SCRT": "secret",
        "AVAX": "avalanche-2"
    }
    coin_id = coin_ids.get(coin.upper())
    if not coin_id:
        return None
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={coin_id}&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    print(f"DEBUG: Coin {coin} ‚Üí {coin_id}, Response: {data}")  # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    return data.get(coin_id, {}).get("usd")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_message(message):
    bot.send_message(chat_id='@alexbinancebotcrypto', text=message)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —Ü–µ–Ω—ã
def track_prices():
    while True:
        for coin, targets in coins.items():
            price = get_coin_price(coin)
            if price is None:
                continue
            if price >= targets["target_buy"]:
                send_message(f"üöÄ –¶–µ–ª—å –ø–æ {coin} –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –¶–µ–Ω–∞: {price:.2f} USD. –§–∏–∫—Å–∏—Ä—É–π –ø—Ä–∏–±—ã–ª—å!")
            elif price <= targets["stop_loss"]:
                send_message(f"‚ö†Ô∏è –°—Ç–æ–ø-–ª–æ—Å—Å –ø–æ {coin}! –¶–µ–Ω–∞: {price:.2f} USD. –ü—Ä–æ–¥–∞–≤–∞–π –ø–æ–∑–∏—Ü–∏—é!")
        time.sleep(300)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    track_prices()
