import threading
import time
import requests
from telegram import Bot
from flask import Flask
import os

# –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ü—Ä—è–º–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª (–µ—Å–ª–∏ –ø—É–±–ª–∏—á–Ω—ã–π)
TELEGRAM_CHAT_ID = "@alexbinancebotcrypto"

bot = Bot(token=TELEGRAM_BOT_TOKEN)

# –°–ø–∏—Å–æ–∫ –º–æ–Ω–µ—Ç —Å —Ü–µ–ª—è–º–∏
coins = {
    "fetch-ai": {"symbol": "FET", "target_buy": 1.00, "stop_loss": 0.70},
    "chainlink": {"symbol": "LINK", "target_buy": 20.00, "stop_loss": 15.00},
    "secret": {"symbol": "SCRT", "target_buy": 0.30, "stop_loss": 0.21},
    "avalanche-2": {"symbol": "AVAX", "target_buy": 30.00, "stop_loss": 22.00}
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
def get_coin_price(coin_id):
    url = f"https://api.coingecko.com/api/v3/simple/price?ids={coin_id}&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    return data[coin_id]["usd"]

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
def send_message(message):
    try:
        bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

# –¶–∏–∫–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
def track_prices():
    # –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ú–æ–Ω–µ—Ç—ã –∏ —Ü–µ–ª–∏:\n"
    for coin_id, info in coins.items():
        try:
            price = get_coin_price(coin_id)
            msg += f"‚Ä¢ {info['symbol']}: {price} USD (üéØ {info['target_buy']} / ‚õî {info['stop_loss']})\n"
        except:
            msg += f"‚Ä¢ {info['symbol']}: ‚ùå –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É\n"
    send_message(msg)

    while True:
        for coin_id, info in coins.items():
            try:
                price = get_coin_price(coin_id)
                if price >= info["target_buy"]:
                    send_message(f"üü¢ {info['symbol']} –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏! –¶–µ–Ω–∞: {price} USD.")
                elif price <= info["stop_loss"]:
                    send_message(f"üî¥ –°—Ç–æ–ø-–ª–æ—Å—Å –ø–æ {info['symbol']}! –¶–µ–Ω–∞: {price} USD.")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ {coin_id}: {e}")
        time.sleep(300)

# Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
app = Flask(__name__)

@app.route("/")
def index():
    return "‚úÖ Crypto bot is running."

if __name__ == "__main__":
    t = threading.Thread(target=track_prices)
    t.start()
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
